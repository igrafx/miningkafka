connector.class = "com.igrafx.kafka.sink.main.domain.IGrafxSinkConnector"
tasks.max = "1"
topics = "igrafx_topic_example"
api.url = "api_url_example"
api.authUrl = "auth_url_example"
workGroupId = "w_id_example"
workGroupKey = "w_key_example"
projectId = "project_id_example"
csv.encoding = "UTF8"
csv.separator = ","
csv.quote = "\""
csv.fieldsNumber = "4"
csv.header = "true"
csv.defaultTextValue = "null"
retentionTimeInDay = "100"
columnMapping.create = "true",
columnMapping.caseIdColumnIndex = "0",
columnMapping.activityColumnIndex = "1",
columnMapping.timeInformationList = "{2;dd/MM/yy HH:mm},{3;dd/MM/yy HH:mm}",
columnMapping.dimensionsInformationList = "{4;Country},{5;Region},{6;City}",
columnMapping.metricsInformationList = "{7;DepartmentNumber},{8;Price;Euros}",
csv.endOfLine = "\\n",
csv.escape = "\\",
csv.comment = "#",
kafkaLoggingEvents.isLogging = "true",
kafkaLoggingEvents.topic = "event_logging_topic_example",
threshold.elementNumber = '6'
threshold.valuePattern = '.*regex_example.*'
threshold.timeoutInSeconds = 3000
bootstrap.servers = 'broker:29092'
key.converter = "org.apache.kafka.connect.storage.StringConverter"
value.converter = io.confluent.connect.avro.AvroConverter,
value.converter.schema.registry.url = http://schema-registry:8081